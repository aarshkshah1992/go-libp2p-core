// Code generated by protoc-gen-go. DO NOT EDIT.
// source: introspection.proto

package introspection

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The status of a connection or stream.
type Status int32

const (
	Status_ACTIVE  Status = 0
	Status_CLOSED  Status = 1
	Status_OPENING Status = 2
	Status_CLOSING Status = 3
	Status_ERROR   Status = 4
)

var Status_name = map[int32]string{
	0: "ACTIVE",
	1: "CLOSED",
	2: "OPENING",
	3: "CLOSING",
	4: "ERROR",
}

var Status_value = map[string]int32{
	"ACTIVE":  0,
	"CLOSED":  1,
	"OPENING": 2,
	"CLOSING": 3,
	"ERROR":   4,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{0}
}

// Our role in a connection or stream.
type Role int32

const (
	Role_INITIATOR Role = 0
	Role_RESPONDER Role = 1
)

var Role_name = map[int32]string{
	0: "INITIATOR",
	1: "RESPONDER",
}

var Role_value = map[string]int32{
	"INITIATOR": 0,
	"RESPONDER": 1,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{1}
}

// Trigger of the query.
type DHT_Query_Trigger int32

const (
	DHT_Query_API       DHT_Query_Trigger = 0
	DHT_Query_DISCOVERY DHT_Query_Trigger = 1
)

var DHT_Query_Trigger_name = map[int32]string{
	0: "API",
	1: "DISCOVERY",
}

var DHT_Query_Trigger_value = map[string]int32{
	"API":       0,
	"DISCOVERY": 1,
}

func (x DHT_Query_Trigger) String() string {
	return proto.EnumName(DHT_Query_Trigger_name, int32(x))
}

func (DHT_Query_Trigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{10, 1, 0}
}

// Type of the query.
type DHT_Query_Type int32

const (
	DHT_Query_CONTENT  DHT_Query_Type = 0
	DHT_Query_PROVIDER DHT_Query_Type = 1
	DHT_Query_VALUE    DHT_Query_Type = 2
)

var DHT_Query_Type_name = map[int32]string{
	0: "CONTENT",
	1: "PROVIDER",
	2: "VALUE",
}

var DHT_Query_Type_value = map[string]int32{
	"CONTENT":  0,
	"PROVIDER": 1,
	"VALUE":    2,
}

func (x DHT_Query_Type) String() string {
	return proto.EnumName(DHT_Query_Type_name, int32(x))
}

func (DHT_Query_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{10, 1, 1}
}

// Status indicating the result of the query
type DHT_Query_Result int32

const (
	DHT_Query_SUCCESS DHT_Query_Result = 0
	DHT_Query_ERROR   DHT_Query_Result = 1
	DHT_Query_TIMEOUT DHT_Query_Result = 2
	// Pending queries may be absent, depending on data collection
	DHT_Query_PENDING DHT_Query_Result = 3
)

var DHT_Query_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR",
	2: "TIMEOUT",
	3: "PENDING",
}

var DHT_Query_Result_value = map[string]int32{
	"SUCCESS": 0,
	"ERROR":   1,
	"TIMEOUT": 2,
	"PENDING": 3,
}

func (x DHT_Query_Result) String() string {
	return proto.EnumName(DHT_Query_Result_name, int32(x))
}

func (DHT_Query_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{10, 1, 2}
}

// Version of schema
type Version struct {
	Number               uint32   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

// ResultCounter is a monotonically increasing counter that reports an ok/err breakdown of the total.
type ResultCounter struct {
	Total                uint32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Ok                   uint32   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	Err                  uint32   `protobuf:"varint,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultCounter) Reset()         { *m = ResultCounter{} }
func (m *ResultCounter) String() string { return proto.CompactTextString(m) }
func (*ResultCounter) ProtoMessage()    {}
func (*ResultCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{1}
}

func (m *ResultCounter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultCounter.Unmarshal(m, b)
}
func (m *ResultCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultCounter.Marshal(b, m, deterministic)
}
func (m *ResultCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultCounter.Merge(m, src)
}
func (m *ResultCounter) XXX_Size() int {
	return xxx_messageInfo_ResultCounter.Size(m)
}
func (m *ResultCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultCounter.DiscardUnknown(m)
}

var xxx_messageInfo_ResultCounter proto.InternalMessageInfo

func (m *ResultCounter) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ResultCounter) GetOk() uint32 {
	if m != nil {
		return m.Ok
	}
	return 0
}

func (m *ResultCounter) GetErr() uint32 {
	if m != nil {
		return m.Err
	}
	return 0
}

// Moving totals over sliding time windows. Models sensible time windows,
// we don't have to populate them all at once.
//
// Graphical example:
//
// time     past -> present                              an event 16 min ago
// ======================================================X================>>
//                                                       |               | 1m
//                                                       |           |---| 5m
//                                                       | |-------------| 15m
//                                          |------------X---------------| 30m
//            |------------------------------------------X---------------| 60m
type SlidingCounter struct {
	Over_1M              uint32   `protobuf:"varint,1,opt,name=over_1m,json=over1m,proto3" json:"over_1m,omitempty"`
	Over_5M              uint32   `protobuf:"varint,2,opt,name=over_5m,json=over5m,proto3" json:"over_5m,omitempty"`
	Over_15M             uint32   `protobuf:"varint,3,opt,name=over_15m,json=over15m,proto3" json:"over_15m,omitempty"`
	Over_30M             uint32   `protobuf:"varint,4,opt,name=over_30m,json=over30m,proto3" json:"over_30m,omitempty"`
	Over_1Hr             uint32   `protobuf:"varint,5,opt,name=over_1hr,json=over1hr,proto3" json:"over_1hr,omitempty"`
	Over_2Hr             uint32   `protobuf:"varint,6,opt,name=over_2hr,json=over2hr,proto3" json:"over_2hr,omitempty"`
	Over_4Hr             uint32   `protobuf:"varint,7,opt,name=over_4hr,json=over4hr,proto3" json:"over_4hr,omitempty"`
	Over_8Hr             uint32   `protobuf:"varint,8,opt,name=over_8hr,json=over8hr,proto3" json:"over_8hr,omitempty"`
	Over_12Hr            uint32   `protobuf:"varint,9,opt,name=over_12hr,json=over12hr,proto3" json:"over_12hr,omitempty"`
	Over_24Hr            uint32   `protobuf:"varint,10,opt,name=over_24hr,json=over24hr,proto3" json:"over_24hr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlidingCounter) Reset()         { *m = SlidingCounter{} }
func (m *SlidingCounter) String() string { return proto.CompactTextString(m) }
func (*SlidingCounter) ProtoMessage()    {}
func (*SlidingCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{2}
}

func (m *SlidingCounter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlidingCounter.Unmarshal(m, b)
}
func (m *SlidingCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlidingCounter.Marshal(b, m, deterministic)
}
func (m *SlidingCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlidingCounter.Merge(m, src)
}
func (m *SlidingCounter) XXX_Size() int {
	return xxx_messageInfo_SlidingCounter.Size(m)
}
func (m *SlidingCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_SlidingCounter.DiscardUnknown(m)
}

var xxx_messageInfo_SlidingCounter proto.InternalMessageInfo

func (m *SlidingCounter) GetOver_1M() uint32 {
	if m != nil {
		return m.Over_1M
	}
	return 0
}

func (m *SlidingCounter) GetOver_5M() uint32 {
	if m != nil {
		return m.Over_5M
	}
	return 0
}

func (m *SlidingCounter) GetOver_15M() uint32 {
	if m != nil {
		return m.Over_15M
	}
	return 0
}

func (m *SlidingCounter) GetOver_30M() uint32 {
	if m != nil {
		return m.Over_30M
	}
	return 0
}

func (m *SlidingCounter) GetOver_1Hr() uint32 {
	if m != nil {
		return m.Over_1Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_2Hr() uint32 {
	if m != nil {
		return m.Over_2Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_4Hr() uint32 {
	if m != nil {
		return m.Over_4Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_8Hr() uint32 {
	if m != nil {
		return m.Over_8Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_12Hr() uint32 {
	if m != nil {
		return m.Over_12Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_24Hr() uint32 {
	if m != nil {
		return m.Over_24Hr
	}
	return 0
}

// DataGauge reports stats for data traffic in a given direction.
type DataGauge struct {
	// Cumulative bytes.
	CumBytes uint64 `protobuf:"varint,1,opt,name=cum_bytes,json=cumBytes,proto3" json:"cum_bytes,omitempty"`
	// Cumulative packets.
	CumPackets uint64 `protobuf:"varint,2,opt,name=cum_packets,json=cumPackets,proto3" json:"cum_packets,omitempty"`
	// Instantaneous bandwidth measurement (bytes/second).
	InstBw               uint64   `protobuf:"varint,3,opt,name=inst_bw,json=instBw,proto3" json:"inst_bw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataGauge) Reset()         { *m = DataGauge{} }
func (m *DataGauge) String() string { return proto.CompactTextString(m) }
func (*DataGauge) ProtoMessage()    {}
func (*DataGauge) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{3}
}

func (m *DataGauge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataGauge.Unmarshal(m, b)
}
func (m *DataGauge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataGauge.Marshal(b, m, deterministic)
}
func (m *DataGauge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataGauge.Merge(m, src)
}
func (m *DataGauge) XXX_Size() int {
	return xxx_messageInfo_DataGauge.Size(m)
}
func (m *DataGauge) XXX_DiscardUnknown() {
	xxx_messageInfo_DataGauge.DiscardUnknown(m)
}

var xxx_messageInfo_DataGauge proto.InternalMessageInfo

func (m *DataGauge) GetCumBytes() uint64 {
	if m != nil {
		return m.CumBytes
	}
	return 0
}

func (m *DataGauge) GetCumPackets() uint64 {
	if m != nil {
		return m.CumPackets
	}
	return 0
}

func (m *DataGauge) GetInstBw() uint64 {
	if m != nil {
		return m.InstBw
	}
	return 0
}

// Runtime encapsulates runtime info about a node.
type Runtime struct {
	// e.g. go-libp2p, js-libp2p, rust-libp2p, etc.
	Implementation string `protobuf:"bytes,1,opt,name=implementation,proto3" json:"implementation,omitempty"`
	// e.g. 1.2.3.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// e.g. Windows, Unix, macOS, Chrome, Mozilla, etc.
	Platform string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	// our peer id - the peer id of the host system
	PeerId               string   `protobuf:"bytes,4,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Runtime) Reset()         { *m = Runtime{} }
func (m *Runtime) String() string { return proto.CompactTextString(m) }
func (*Runtime) ProtoMessage()    {}
func (*Runtime) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{4}
}

func (m *Runtime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Runtime.Unmarshal(m, b)
}
func (m *Runtime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Runtime.Marshal(b, m, deterministic)
}
func (m *Runtime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Runtime.Merge(m, src)
}
func (m *Runtime) XXX_Size() int {
	return xxx_messageInfo_Runtime.Size(m)
}
func (m *Runtime) XXX_DiscardUnknown() {
	xxx_messageInfo_Runtime.DiscardUnknown(m)
}

var xxx_messageInfo_Runtime proto.InternalMessageInfo

func (m *Runtime) GetImplementation() string {
	if m != nil {
		return m.Implementation
	}
	return ""
}

func (m *Runtime) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Runtime) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Runtime) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

// EndpointPair is a pair of multiaddrs.
type EndpointPair struct {
	// the source multiaddr.
	SrcMultiaddr string `protobuf:"bytes,1,opt,name=src_multiaddr,json=srcMultiaddr,proto3" json:"src_multiaddr,omitempty"`
	// the destination multiaddr.
	DstMultiaddr         string   `protobuf:"bytes,2,opt,name=dst_multiaddr,json=dstMultiaddr,proto3" json:"dst_multiaddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndpointPair) Reset()         { *m = EndpointPair{} }
func (m *EndpointPair) String() string { return proto.CompactTextString(m) }
func (*EndpointPair) ProtoMessage()    {}
func (*EndpointPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{5}
}

func (m *EndpointPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointPair.Unmarshal(m, b)
}
func (m *EndpointPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointPair.Marshal(b, m, deterministic)
}
func (m *EndpointPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointPair.Merge(m, src)
}
func (m *EndpointPair) XXX_Size() int {
	return xxx_messageInfo_EndpointPair.Size(m)
}
func (m *EndpointPair) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointPair.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointPair proto.InternalMessageInfo

func (m *EndpointPair) GetSrcMultiaddr() string {
	if m != nil {
		return m.SrcMultiaddr
	}
	return ""
}

func (m *EndpointPair) GetDstMultiaddr() string {
	if m != nil {
		return m.DstMultiaddr
	}
	return ""
}

// Traffic encloses data transfer statistics.
type Traffic struct {
	// snapshot of the data in metrics.
	TrafficIn *DataGauge `protobuf:"bytes,1,opt,name=traffic_in,json=trafficIn,proto3" json:"traffic_in,omitempty"`
	// snapshot of the data out metrics.
	TrafficOut           *DataGauge `protobuf:"bytes,2,opt,name=traffic_out,json=trafficOut,proto3" json:"traffic_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Traffic) Reset()         { *m = Traffic{} }
func (m *Traffic) String() string { return proto.CompactTextString(m) }
func (*Traffic) ProtoMessage()    {}
func (*Traffic) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{6}
}

func (m *Traffic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Traffic.Unmarshal(m, b)
}
func (m *Traffic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Traffic.Marshal(b, m, deterministic)
}
func (m *Traffic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Traffic.Merge(m, src)
}
func (m *Traffic) XXX_Size() int {
	return xxx_messageInfo_Traffic.Size(m)
}
func (m *Traffic) XXX_DiscardUnknown() {
	xxx_messageInfo_Traffic.DiscardUnknown(m)
}

var xxx_messageInfo_Traffic proto.InternalMessageInfo

func (m *Traffic) GetTrafficIn() *DataGauge {
	if m != nil {
		return m.TrafficIn
	}
	return nil
}

func (m *Traffic) GetTrafficOut() *DataGauge {
	if m != nil {
		return m.TrafficOut
	}
	return nil
}

// a list of streams, by reference or inlined.
type StreamList struct {
	// NOTE: only one of the next 2 fields can appear, but proto3
	// doesn't support combining oneof and repeated.
	//
	// streams within this connection by reference.
	StreamIds [][]byte `protobuf:"bytes,1,rep,name=stream_ids,json=streamIds,proto3" json:"stream_ids,omitempty"`
	// streams within this connection by inlining.
	Streams              []*Stream `protobuf:"bytes,2,rep,name=streams,proto3" json:"streams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StreamList) Reset()         { *m = StreamList{} }
func (m *StreamList) String() string { return proto.CompactTextString(m) }
func (*StreamList) ProtoMessage()    {}
func (*StreamList) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{7}
}

func (m *StreamList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamList.Unmarshal(m, b)
}
func (m *StreamList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamList.Marshal(b, m, deterministic)
}
func (m *StreamList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamList.Merge(m, src)
}
func (m *StreamList) XXX_Size() int {
	return xxx_messageInfo_StreamList.Size(m)
}
func (m *StreamList) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamList.DiscardUnknown(m)
}

var xxx_messageInfo_StreamList proto.InternalMessageInfo

func (m *StreamList) GetStreamIds() [][]byte {
	if m != nil {
		return m.StreamIds
	}
	return nil
}

func (m *StreamList) GetStreams() []*Stream {
	if m != nil {
		return m.Streams
	}
	return nil
}

// Connection reports metrics and state of a libp2p connection.
type Connection struct {
	// the id of this connection, not to be shown in user tooling,
	// used for (cross)referencing connections (e.g. relay).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the peer id of the other party.
	PeerId string `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// the status of this connection.
	Status Status `protobuf:"varint,3,opt,name=status,proto3,enum=introspection.Status" json:"status,omitempty"`
	// a reference to the transport managing this connection.
	TransportId []byte `protobuf:"bytes,4,opt,name=transport_id,json=transportId,proto3" json:"transport_id,omitempty"`
	// the endpoints participating in this connection.
	Endpoints *EndpointPair `protobuf:"bytes,5,opt,name=endpoints,proto3" json:"endpoints,omitempty"`
	// the timeline of the connection, see Connection.Timeline.
	Timeline *Connection_Timeline `protobuf:"bytes,6,opt,name=timeline,proto3" json:"timeline,omitempty"`
	// our role in this connection.
	Role Role `protobuf:"varint,7,opt,name=role,proto3,enum=introspection.Role" json:"role,omitempty"`
	// traffic statistics.
	Traffic *Traffic `protobuf:"bytes,8,opt,name=traffic,proto3" json:"traffic,omitempty"`
	// properties of this connection.
	Attribs *Connection_Attributes `protobuf:"bytes,9,opt,name=attribs,proto3" json:"attribs,omitempty"`
	// the instantaneous latency of this connection in nanoseconds.
	LatencyNs uint64 `protobuf:"varint,10,opt,name=latency_ns,json=latencyNs,proto3" json:"latency_ns,omitempty"`
	// streams within this connection.
	Streams *StreamList `protobuf:"bytes,11,opt,name=streams,proto3" json:"streams,omitempty"`
	// if this is a relayed connection, this points to the relaying connection.
	// a default value here (empty bytes) indicates this is not a relayed connection.
	//
	// Types that are valid to be assigned to RelayedOver:
	//	*Connection_ConnId
	//	*Connection_Conn
	RelayedOver isConnection_RelayedOver `protobuf_oneof:"relayed_over"`
	// user provided tags.
	UserProvidedTags     []string `protobuf:"bytes,99,rep,name=user_provided_tags,json=userProvidedTags,proto3" json:"user_provided_tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{8}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Connection) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *Connection) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_ACTIVE
}

func (m *Connection) GetTransportId() []byte {
	if m != nil {
		return m.TransportId
	}
	return nil
}

func (m *Connection) GetEndpoints() *EndpointPair {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Connection) GetTimeline() *Connection_Timeline {
	if m != nil {
		return m.Timeline
	}
	return nil
}

func (m *Connection) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_INITIATOR
}

func (m *Connection) GetTraffic() *Traffic {
	if m != nil {
		return m.Traffic
	}
	return nil
}

func (m *Connection) GetAttribs() *Connection_Attributes {
	if m != nil {
		return m.Attribs
	}
	return nil
}

func (m *Connection) GetLatencyNs() uint64 {
	if m != nil {
		return m.LatencyNs
	}
	return 0
}

func (m *Connection) GetStreams() *StreamList {
	if m != nil {
		return m.Streams
	}
	return nil
}

type isConnection_RelayedOver interface {
	isConnection_RelayedOver()
}

type Connection_ConnId struct {
	ConnId string `protobuf:"bytes,16,opt,name=conn_id,json=connId,proto3,oneof"`
}

type Connection_Conn struct {
	Conn *Connection `protobuf:"bytes,17,opt,name=conn,proto3,oneof"`
}

func (*Connection_ConnId) isConnection_RelayedOver() {}

func (*Connection_Conn) isConnection_RelayedOver() {}

func (m *Connection) GetRelayedOver() isConnection_RelayedOver {
	if m != nil {
		return m.RelayedOver
	}
	return nil
}

func (m *Connection) GetConnId() string {
	if x, ok := m.GetRelayedOver().(*Connection_ConnId); ok {
		return x.ConnId
	}
	return ""
}

func (m *Connection) GetConn() *Connection {
	if x, ok := m.GetRelayedOver().(*Connection_Conn); ok {
		return x.Conn
	}
	return nil
}

func (m *Connection) GetUserProvidedTags() []string {
	if m != nil {
		return m.UserProvidedTags
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Connection) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Connection_ConnId)(nil),
		(*Connection_Conn)(nil),
	}
}

// Timeline contains the timestamps of the well-known milestones of a connection.
type Connection_Timeline struct {
	// the instant when a connection was opened on the wire.
	OpenTs *timestamp.Timestamp `protobuf:"bytes,1,opt,name=open_ts,json=openTs,proto3" json:"open_ts,omitempty"`
	// the instant when the upgrade process (handshake, security, multiplexing) finished.
	UpgradedTs *timestamp.Timestamp `protobuf:"bytes,2,opt,name=upgraded_ts,json=upgradedTs,proto3" json:"upgraded_ts,omitempty"`
	// the instant when this connection was terminated.
	CloseTs              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=close_ts,json=closeTs,proto3" json:"close_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Connection_Timeline) Reset()         { *m = Connection_Timeline{} }
func (m *Connection_Timeline) String() string { return proto.CompactTextString(m) }
func (*Connection_Timeline) ProtoMessage()    {}
func (*Connection_Timeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{8, 0}
}

func (m *Connection_Timeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection_Timeline.Unmarshal(m, b)
}
func (m *Connection_Timeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection_Timeline.Marshal(b, m, deterministic)
}
func (m *Connection_Timeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection_Timeline.Merge(m, src)
}
func (m *Connection_Timeline) XXX_Size() int {
	return xxx_messageInfo_Connection_Timeline.Size(m)
}
func (m *Connection_Timeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection_Timeline.DiscardUnknown(m)
}

var xxx_messageInfo_Connection_Timeline proto.InternalMessageInfo

func (m *Connection_Timeline) GetOpenTs() *timestamp.Timestamp {
	if m != nil {
		return m.OpenTs
	}
	return nil
}

func (m *Connection_Timeline) GetUpgradedTs() *timestamp.Timestamp {
	if m != nil {
		return m.UpgradedTs
	}
	return nil
}

func (m *Connection_Timeline) GetCloseTs() *timestamp.Timestamp {
	if m != nil {
		return m.CloseTs
	}
	return nil
}

// Attributes encapsulates the attributes of this connection.
type Connection_Attributes struct {
	// the multiplexer being used.
	Multiplexer string `protobuf:"bytes,1,opt,name=multiplexer,proto3" json:"multiplexer,omitempty"`
	// the encryption method being used.
	Encryption           string   `protobuf:"bytes,2,opt,name=encryption,proto3" json:"encryption,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection_Attributes) Reset()         { *m = Connection_Attributes{} }
func (m *Connection_Attributes) String() string { return proto.CompactTextString(m) }
func (*Connection_Attributes) ProtoMessage()    {}
func (*Connection_Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{8, 1}
}

func (m *Connection_Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection_Attributes.Unmarshal(m, b)
}
func (m *Connection_Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection_Attributes.Marshal(b, m, deterministic)
}
func (m *Connection_Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection_Attributes.Merge(m, src)
}
func (m *Connection_Attributes) XXX_Size() int {
	return xxx_messageInfo_Connection_Attributes.Size(m)
}
func (m *Connection_Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_Connection_Attributes proto.InternalMessageInfo

func (m *Connection_Attributes) GetMultiplexer() string {
	if m != nil {
		return m.Multiplexer
	}
	return ""
}

func (m *Connection_Attributes) GetEncryption() string {
	if m != nil {
		return m.Encryption
	}
	return ""
}

// Stream reports metrics and state of a libp2p stream.
type Stream struct {
	// the id of this stream, not to be shown in user tooling,
	// used for (cross)referencing streams.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the protocol pinned to this stream.
	Protocol string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// our role in this stream.
	Role Role `protobuf:"varint,3,opt,name=role,proto3,enum=introspection.Role" json:"role,omitempty"`
	// traffic statistics.
	Traffic *Traffic `protobuf:"bytes,4,opt,name=traffic,proto3" json:"traffic,omitempty"`
	// the connection this stream is hosted under.
	Conn *Stream_ConnectionRef `protobuf:"bytes,5,opt,name=conn,proto3" json:"conn,omitempty"`
	// the timeline of the stream, see Stream.Timeline.
	Timeline *Stream_Timeline `protobuf:"bytes,6,opt,name=timeline,proto3" json:"timeline,omitempty"`
	// the status of this stream.
	Status Status `protobuf:"varint,7,opt,name=status,proto3,enum=introspection.Status" json:"status,omitempty"`
	// the instantaneous latency of this stream in nanoseconds.
	// TODO: this is hard to calculate.
	LatencyNs uint64 `protobuf:"varint,16,opt,name=latency_ns,json=latencyNs,proto3" json:"latency_ns,omitempty"`
	// user provided tags.
	UserProvidedTags     []string `protobuf:"bytes,99,rep,name=user_provided_tags,json=userProvidedTags,proto3" json:"user_provided_tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{9}
}

func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (m *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(m, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

func (m *Stream) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Stream) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Stream) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_INITIATOR
}

func (m *Stream) GetTraffic() *Traffic {
	if m != nil {
		return m.Traffic
	}
	return nil
}

func (m *Stream) GetConn() *Stream_ConnectionRef {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *Stream) GetTimeline() *Stream_Timeline {
	if m != nil {
		return m.Timeline
	}
	return nil
}

func (m *Stream) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_ACTIVE
}

func (m *Stream) GetLatencyNs() uint64 {
	if m != nil {
		return m.LatencyNs
	}
	return 0
}

func (m *Stream) GetUserProvidedTags() []string {
	if m != nil {
		return m.UserProvidedTags
	}
	return nil
}

type Stream_ConnectionRef struct {
	// Types that are valid to be assigned to Connection:
	//	*Stream_ConnectionRef_Conn
	//	*Stream_ConnectionRef_ConnId
	Connection           isStream_ConnectionRef_Connection `protobuf_oneof:"connection"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Stream_ConnectionRef) Reset()         { *m = Stream_ConnectionRef{} }
func (m *Stream_ConnectionRef) String() string { return proto.CompactTextString(m) }
func (*Stream_ConnectionRef) ProtoMessage()    {}
func (*Stream_ConnectionRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{9, 0}
}

func (m *Stream_ConnectionRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream_ConnectionRef.Unmarshal(m, b)
}
func (m *Stream_ConnectionRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream_ConnectionRef.Marshal(b, m, deterministic)
}
func (m *Stream_ConnectionRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream_ConnectionRef.Merge(m, src)
}
func (m *Stream_ConnectionRef) XXX_Size() int {
	return xxx_messageInfo_Stream_ConnectionRef.Size(m)
}
func (m *Stream_ConnectionRef) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream_ConnectionRef.DiscardUnknown(m)
}

var xxx_messageInfo_Stream_ConnectionRef proto.InternalMessageInfo

type isStream_ConnectionRef_Connection interface {
	isStream_ConnectionRef_Connection()
}

type Stream_ConnectionRef_Conn struct {
	Conn *Connection `protobuf:"bytes,1,opt,name=conn,proto3,oneof"`
}

type Stream_ConnectionRef_ConnId struct {
	ConnId string `protobuf:"bytes,2,opt,name=conn_id,json=connId,proto3,oneof"`
}

func (*Stream_ConnectionRef_Conn) isStream_ConnectionRef_Connection() {}

func (*Stream_ConnectionRef_ConnId) isStream_ConnectionRef_Connection() {}

func (m *Stream_ConnectionRef) GetConnection() isStream_ConnectionRef_Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *Stream_ConnectionRef) GetConn() *Connection {
	if x, ok := m.GetConnection().(*Stream_ConnectionRef_Conn); ok {
		return x.Conn
	}
	return nil
}

func (m *Stream_ConnectionRef) GetConnId() string {
	if x, ok := m.GetConnection().(*Stream_ConnectionRef_ConnId); ok {
		return x.ConnId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Stream_ConnectionRef) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Stream_ConnectionRef_Conn)(nil),
		(*Stream_ConnectionRef_ConnId)(nil),
	}
}

// Timeline contains the timestamps of the well-known milestones of a stream.
type Stream_Timeline struct {
	// the instant when the stream was opened.
	OpenTs *timestamp.Timestamp `protobuf:"bytes,1,opt,name=open_ts,json=openTs,proto3" json:"open_ts,omitempty"`
	// the instant when the stream was terminated.
	CloseTs              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=close_ts,json=closeTs,proto3" json:"close_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Stream_Timeline) Reset()         { *m = Stream_Timeline{} }
func (m *Stream_Timeline) String() string { return proto.CompactTextString(m) }
func (*Stream_Timeline) ProtoMessage()    {}
func (*Stream_Timeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{9, 1}
}

func (m *Stream_Timeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream_Timeline.Unmarshal(m, b)
}
func (m *Stream_Timeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream_Timeline.Marshal(b, m, deterministic)
}
func (m *Stream_Timeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream_Timeline.Merge(m, src)
}
func (m *Stream_Timeline) XXX_Size() int {
	return xxx_messageInfo_Stream_Timeline.Size(m)
}
func (m *Stream_Timeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream_Timeline.DiscardUnknown(m)
}

var xxx_messageInfo_Stream_Timeline proto.InternalMessageInfo

func (m *Stream_Timeline) GetOpenTs() *timestamp.Timestamp {
	if m != nil {
		return m.OpenTs
	}
	return nil
}

func (m *Stream_Timeline) GetCloseTs() *timestamp.Timestamp {
	if m != nil {
		return m.CloseTs
	}
	return nil
}

// DHT metrics and state.
type DHT struct {
	// DHT protocol name
	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// protocol enabled.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// timestap of start up.
	StartTs *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	// params of the dht.
	Params *DHT_Params `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	// queries data
	Query                []*DHT_Query `protobuf:"bytes,5,rep,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DHT) Reset()         { *m = DHT{} }
func (m *DHT) String() string { return proto.CompactTextString(m) }
func (*DHT) ProtoMessage()    {}
func (*DHT) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{10}
}

func (m *DHT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHT.Unmarshal(m, b)
}
func (m *DHT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHT.Marshal(b, m, deterministic)
}
func (m *DHT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHT.Merge(m, src)
}
func (m *DHT) XXX_Size() int {
	return xxx_messageInfo_DHT.Size(m)
}
func (m *DHT) XXX_DiscardUnknown() {
	xxx_messageInfo_DHT.DiscardUnknown(m)
}

var xxx_messageInfo_DHT proto.InternalMessageInfo

func (m *DHT) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *DHT) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *DHT) GetStartTs() *timestamp.Timestamp {
	if m != nil {
		return m.StartTs
	}
	return nil
}

func (m *DHT) GetParams() *DHT_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *DHT) GetQuery() []*DHT_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type DHT_Params struct {
	// maximum number of requests to perform.
	K uint64 `protobuf:"varint,1,opt,name=k,proto3" json:"k,omitempty"`
	// concurrency of asynchronous requests.
	Alpha uint64 `protobuf:"varint,2,opt,name=alpha,proto3" json:"alpha,omitempty"`
	// number of disjoint paths to use.
	DisjointPaths        uint64   `protobuf:"varint,3,opt,name=disjoint_paths,json=disjointPaths,proto3" json:"disjoint_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHT_Params) Reset()         { *m = DHT_Params{} }
func (m *DHT_Params) String() string { return proto.CompactTextString(m) }
func (*DHT_Params) ProtoMessage()    {}
func (*DHT_Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{10, 0}
}

func (m *DHT_Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHT_Params.Unmarshal(m, b)
}
func (m *DHT_Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHT_Params.Marshal(b, m, deterministic)
}
func (m *DHT_Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHT_Params.Merge(m, src)
}
func (m *DHT_Params) XXX_Size() int {
	return xxx_messageInfo_DHT_Params.Size(m)
}
func (m *DHT_Params) XXX_DiscardUnknown() {
	xxx_messageInfo_DHT_Params.DiscardUnknown(m)
}

var xxx_messageInfo_DHT_Params proto.InternalMessageInfo

func (m *DHT_Params) GetK() uint64 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *DHT_Params) GetAlpha() uint64 {
	if m != nil {
		return m.Alpha
	}
	return 0
}

func (m *DHT_Params) GetDisjointPaths() uint64 {
	if m != nil {
		return m.DisjointPaths
	}
	return 0
}

type DHT_Query struct {
	// id of the query; used for internal referencing (<== TODO: confirm this)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// id of the peer being sought by this query
	TargetPeerId string `protobuf:"bytes,2,opt,name=target_peer_id,json=targetPeerId,proto3" json:"target_peer_id,omitempty"`
	// total time of the query in miliseconds
	TotalTimeMs uint64 `protobuf:"varint,3,opt,name=total_time_ms,json=totalTimeMs,proto3" json:"total_time_ms,omitempty"`
	// number of iterative lookups before reaching result
	TotalSteps uint64 `protobuf:"varint,4,opt,name=total_steps,json=totalSteps,proto3" json:"total_steps,omitempty"`
	// peers queried.
	PeerIds []string `protobuf:"bytes,5,rep,name=peer_ids,json=peerIds,proto3" json:"peer_ids,omitempty"`
	// trigger of the query
	Trigger DHT_Query_Trigger `protobuf:"varint,6,opt,name=trigger,proto3,enum=introspection.DHT_Query_Trigger" json:"trigger,omitempty"`
	// type of the query.
	Type DHT_Query_Type `protobuf:"varint,7,opt,name=type,proto3,enum=introspection.DHT_Query_Type" json:"type,omitempty"`
	// status indicating the result of the query
	Result DHT_Query_Result `protobuf:"varint,8,opt,name=result,proto3,enum=introspection.DHT_Query_Result" json:"result,omitempty"`
	// time query was dispatched
	SentTs               *timestamp.Timestamp `protobuf:"bytes,9,opt,name=sent_ts,json=sentTs,proto3" json:"sent_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DHT_Query) Reset()         { *m = DHT_Query{} }
func (m *DHT_Query) String() string { return proto.CompactTextString(m) }
func (*DHT_Query) ProtoMessage()    {}
func (*DHT_Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{10, 1}
}

func (m *DHT_Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHT_Query.Unmarshal(m, b)
}
func (m *DHT_Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHT_Query.Marshal(b, m, deterministic)
}
func (m *DHT_Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHT_Query.Merge(m, src)
}
func (m *DHT_Query) XXX_Size() int {
	return xxx_messageInfo_DHT_Query.Size(m)
}
func (m *DHT_Query) XXX_DiscardUnknown() {
	xxx_messageInfo_DHT_Query.DiscardUnknown(m)
}

var xxx_messageInfo_DHT_Query proto.InternalMessageInfo

func (m *DHT_Query) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DHT_Query) GetTargetPeerId() string {
	if m != nil {
		return m.TargetPeerId
	}
	return ""
}

func (m *DHT_Query) GetTotalTimeMs() uint64 {
	if m != nil {
		return m.TotalTimeMs
	}
	return 0
}

func (m *DHT_Query) GetTotalSteps() uint64 {
	if m != nil {
		return m.TotalSteps
	}
	return 0
}

func (m *DHT_Query) GetPeerIds() []string {
	if m != nil {
		return m.PeerIds
	}
	return nil
}

func (m *DHT_Query) GetTrigger() DHT_Query_Trigger {
	if m != nil {
		return m.Trigger
	}
	return DHT_Query_API
}

func (m *DHT_Query) GetType() DHT_Query_Type {
	if m != nil {
		return m.Type
	}
	return DHT_Query_CONTENT
}

func (m *DHT_Query) GetResult() DHT_Query_Result {
	if m != nil {
		return m.Result
	}
	return DHT_Query_SUCCESS
}

func (m *DHT_Query) GetSentTs() *timestamp.Timestamp {
	if m != nil {
		return m.SentTs
	}
	return nil
}

// Subsystems encapsulates all instrumented subsystems for a libp2p host.
type Subsystems struct {
	// connections data, source agnostic but currently only supports the Swarm subsystem
	Connections []*Connection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	// the DHT subsystem.
	Dht                  *DHT     `protobuf:"bytes,2,opt,name=dht,proto3" json:"dht,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subsystems) Reset()         { *m = Subsystems{} }
func (m *Subsystems) String() string { return proto.CompactTextString(m) }
func (*Subsystems) ProtoMessage()    {}
func (*Subsystems) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{11}
}

func (m *Subsystems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subsystems.Unmarshal(m, b)
}
func (m *Subsystems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subsystems.Marshal(b, m, deterministic)
}
func (m *Subsystems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subsystems.Merge(m, src)
}
func (m *Subsystems) XXX_Size() int {
	return xxx_messageInfo_Subsystems.Size(m)
}
func (m *Subsystems) XXX_DiscardUnknown() {
	xxx_messageInfo_Subsystems.DiscardUnknown(m)
}

var xxx_messageInfo_Subsystems proto.InternalMessageInfo

func (m *Subsystems) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

func (m *Subsystems) GetDht() *DHT {
	if m != nil {
		return m.Dht
	}
	return nil
}

// Connections and streams output for a time interval is one of these.
type State struct {
	// Version of this protobuf
	Version *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// system information
	Runtime *Runtime `protobuf:"bytes,2,opt,name=runtime,proto3" json:"runtime,omitempty"`
	// list of connections
	Subsystems *Subsystems `protobuf:"bytes,3,opt,name=subsystems,proto3" json:"subsystems,omitempty"`
	// overall traffic for this peer
	Traffic *Traffic `protobuf:"bytes,4,opt,name=traffic,proto3" json:"traffic,omitempty"`
	// moment this data snapshot and instantaneous values were taken
	InstantTs *timestamp.Timestamp `protobuf:"bytes,5,opt,name=instant_ts,json=instantTs,proto3" json:"instant_ts,omitempty"`
	// start of included data collection (cumulative values counted from here)
	StartTs *timestamp.Timestamp `protobuf:"bytes,6,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	// length of time up to instant_ts covered by this data snapshot
	SnapshotDurationMs   uint32   `protobuf:"varint,7,opt,name=snapshot_duration_ms,json=snapshotDurationMs,proto3" json:"snapshot_duration_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_53a8bedf9a75e10a, []int{12}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *State) GetRuntime() *Runtime {
	if m != nil {
		return m.Runtime
	}
	return nil
}

func (m *State) GetSubsystems() *Subsystems {
	if m != nil {
		return m.Subsystems
	}
	return nil
}

func (m *State) GetTraffic() *Traffic {
	if m != nil {
		return m.Traffic
	}
	return nil
}

func (m *State) GetInstantTs() *timestamp.Timestamp {
	if m != nil {
		return m.InstantTs
	}
	return nil
}

func (m *State) GetStartTs() *timestamp.Timestamp {
	if m != nil {
		return m.StartTs
	}
	return nil
}

func (m *State) GetSnapshotDurationMs() uint32 {
	if m != nil {
		return m.SnapshotDurationMs
	}
	return 0
}

func init() {
	proto.RegisterEnum("introspection.Status", Status_name, Status_value)
	proto.RegisterEnum("introspection.Role", Role_name, Role_value)
	proto.RegisterEnum("introspection.DHT_Query_Trigger", DHT_Query_Trigger_name, DHT_Query_Trigger_value)
	proto.RegisterEnum("introspection.DHT_Query_Type", DHT_Query_Type_name, DHT_Query_Type_value)
	proto.RegisterEnum("introspection.DHT_Query_Result", DHT_Query_Result_name, DHT_Query_Result_value)
	proto.RegisterType((*Version)(nil), "introspection.Version")
	proto.RegisterType((*ResultCounter)(nil), "introspection.ResultCounter")
	proto.RegisterType((*SlidingCounter)(nil), "introspection.SlidingCounter")
	proto.RegisterType((*DataGauge)(nil), "introspection.DataGauge")
	proto.RegisterType((*Runtime)(nil), "introspection.Runtime")
	proto.RegisterType((*EndpointPair)(nil), "introspection.EndpointPair")
	proto.RegisterType((*Traffic)(nil), "introspection.Traffic")
	proto.RegisterType((*StreamList)(nil), "introspection.StreamList")
	proto.RegisterType((*Connection)(nil), "introspection.Connection")
	proto.RegisterType((*Connection_Timeline)(nil), "introspection.Connection.Timeline")
	proto.RegisterType((*Connection_Attributes)(nil), "introspection.Connection.Attributes")
	proto.RegisterType((*Stream)(nil), "introspection.Stream")
	proto.RegisterType((*Stream_ConnectionRef)(nil), "introspection.Stream.ConnectionRef")
	proto.RegisterType((*Stream_Timeline)(nil), "introspection.Stream.Timeline")
	proto.RegisterType((*DHT)(nil), "introspection.DHT")
	proto.RegisterType((*DHT_Params)(nil), "introspection.DHT.Params")
	proto.RegisterType((*DHT_Query)(nil), "introspection.DHT.Query")
	proto.RegisterType((*Subsystems)(nil), "introspection.Subsystems")
	proto.RegisterType((*State)(nil), "introspection.State")
}

func init() { proto.RegisterFile("introspection.proto", fileDescriptor_53a8bedf9a75e10a) }

var fileDescriptor_53a8bedf9a75e10a = []byte{
	// 1608 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0x6d, 0x8f, 0xdb, 0xc6,
	0x11, 0x3e, 0x49, 0x3c, 0x52, 0x1c, 0xe9, 0x04, 0x75, 0x93, 0xa6, 0xf2, 0x05, 0x89, 0x1d, 0xc6,
	0x6d, 0x8d, 0x20, 0x3d, 0xdf, 0xc9, 0x31, 0x1c, 0xbb, 0x40, 0x80, 0xb3, 0x24, 0xd8, 0x2a, 0x6c,
	0x49, 0x5d, 0xd1, 0x87, 0x16, 0x28, 0x40, 0x50, 0xe2, 0x9e, 0xc4, 0x1e, 0xdf, 0xba, 0xbb, 0x74,
	0xaa, 0x0f, 0x05, 0xfa, 0x2d, 0xff, 0xa2, 0x7f, 0xa2, 0xfd, 0x47, 0xfd, 0x1b, 0xfd, 0x50, 0xec,
	0x0b, 0x29, 0x9e, 0x4e, 0xb6, 0xcf, 0xed, 0x37, 0xcd, 0xcc, 0x33, 0xbb, 0xab, 0x99, 0x67, 0x5e,
	0x08, 0x9f, 0x84, 0x09, 0xa7, 0x29, 0xcb, 0xc8, 0x92, 0x87, 0x69, 0x72, 0x92, 0xd1, 0x94, 0xa7,
	0xe8, 0xe8, 0x9a, 0xf2, 0xf8, 0xee, 0x2a, 0x4d, 0x57, 0x11, 0x79, 0x28, 0x8d, 0x8b, 0xfc, 0xf2,
	0x21, 0x0f, 0x63, 0xc2, 0xb8, 0x1f, 0x67, 0x0a, 0xef, 0x7c, 0x05, 0xd6, 0x05, 0xa1, 0x2c, 0x4c,
	0x13, 0xf4, 0x19, 0x98, 0x49, 0x1e, 0x2f, 0x08, 0xed, 0xd5, 0xee, 0xd5, 0x1e, 0x1c, 0x61, 0x2d,
	0x39, 0x2f, 0xe0, 0x08, 0x13, 0x96, 0x47, 0x7c, 0x90, 0xe6, 0x09, 0x27, 0x14, 0x7d, 0x0a, 0x87,
	0x3c, 0xe5, 0x7e, 0xa4, 0x71, 0x4a, 0x40, 0x1d, 0xa8, 0xa7, 0x57, 0xbd, 0xba, 0x54, 0xd5, 0xd3,
	0x2b, 0xd4, 0x85, 0x06, 0xa1, 0xb4, 0xd7, 0x90, 0x0a, 0xf1, 0xd3, 0xf9, 0x47, 0x1d, 0x3a, 0xf3,
	0x28, 0x0c, 0xc2, 0x64, 0x55, 0x1c, 0xf5, 0x0b, 0xb0, 0xd2, 0xb7, 0x84, 0x7a, 0x67, 0x71, 0x71,
	0xa9, 0x10, 0xcf, 0xe2, 0xd2, 0xf0, 0x38, 0xd6, 0x47, 0x4a, 0xc3, 0xe3, 0x18, 0xdd, 0x81, 0xa6,
	0xf2, 0x78, 0x1c, 0xeb, 0xb3, 0x25, 0xf0, 0xac, 0x62, 0x7a, 0x74, 0x1a, 0xf7, 0x8c, 0xad, 0xe9,
	0xd1, 0x69, 0xc5, 0x6b, 0x4d, 0x7b, 0x87, 0x15, 0xaf, 0x35, 0x2d, 0x4d, 0xfd, 0x35, 0xed, 0x99,
	0x5b, 0x53, 0xbf, 0x62, 0xfa, 0x6e, 0x4d, 0x7b, 0xd6, 0xd6, 0xf4, 0x5d, 0xc5, 0xf4, 0xfd, 0x9a,
	0xf6, 0x9a, 0x5b, 0xd3, 0xf7, 0x6b, 0x8a, 0x3e, 0x07, 0x5b, 0xdd, 0x25, 0x4e, 0xb4, 0xa5, 0x4d,
	0x62, 0x85, 0x5c, 0x1a, 0xfb, 0xe2, 0x4c, 0xd8, 0x1a, 0x85, 0xec, 0x2c, 0xc0, 0x1e, 0xfa, 0xdc,
	0x7f, 0xe1, 0xe7, 0x2b, 0x22, 0x90, 0xcb, 0x3c, 0xf6, 0x16, 0x1b, 0x4e, 0x98, 0x0c, 0x8e, 0x81,
	0x9b, 0xcb, 0x3c, 0x7e, 0x2e, 0x64, 0x74, 0x17, 0x5a, 0xc2, 0x98, 0xf9, 0xcb, 0x2b, 0xc2, 0x99,
	0x0c, 0x91, 0x81, 0x61, 0x99, 0xc7, 0x33, 0xa5, 0x11, 0xf1, 0x0b, 0x13, 0xc6, 0xbd, 0xc5, 0x8f,
	0x32, 0x4a, 0x06, 0x36, 0x85, 0xf8, 0xfc, 0x47, 0xe7, 0xef, 0x35, 0xb0, 0x70, 0x9e, 0x08, 0x1e,
	0xa0, 0x5f, 0x41, 0x27, 0x8c, 0xb3, 0x88, 0xc4, 0x24, 0xe1, 0xbe, 0xe0, 0x8b, 0xbc, 0xc7, 0xc6,
	0x3b, 0x5a, 0xd4, 0x03, 0xeb, 0xad, 0x22, 0x89, 0xbc, 0xc9, 0xc6, 0x85, 0x88, 0x8e, 0xa1, 0x99,
	0x45, 0x3e, 0xbf, 0x4c, 0xa9, 0xca, 0x86, 0x8d, 0x4b, 0x59, 0x3c, 0x21, 0x23, 0x84, 0x7a, 0x61,
	0x20, 0xb3, 0x61, 0x63, 0x53, 0x88, 0xe3, 0xc0, 0xf9, 0x03, 0xb4, 0x47, 0x49, 0x90, 0xa5, 0x61,
	0xc2, 0x67, 0x7e, 0x48, 0xd1, 0xd7, 0x70, 0xc4, 0xe8, 0xd2, 0x8b, 0xf3, 0x88, 0x87, 0x7e, 0x10,
	0x50, 0xfd, 0x8a, 0x36, 0xa3, 0xcb, 0xd7, 0x85, 0x4e, 0x80, 0x02, 0xc6, 0x2b, 0x20, 0xf5, 0x92,
	0x76, 0xc0, 0x78, 0x09, 0x72, 0xfe, 0x06, 0x96, 0x4b, 0xfd, 0xcb, 0xcb, 0x70, 0x89, 0x9e, 0x00,
	0x70, 0xf5, 0xd3, 0x0b, 0xd5, 0xff, 0x6a, 0xf5, 0x7b, 0x27, 0xd7, 0x4b, 0xa6, 0x0c, 0x36, 0xb6,
	0x35, 0x76, 0x9c, 0xa0, 0xa7, 0xd0, 0x2a, 0x1c, 0xd3, 0x9c, 0xcb, 0x6b, 0xde, 0xe7, 0x59, 0xdc,
	0x32, 0xcd, 0xb9, 0xf3, 0x27, 0x80, 0x39, 0xa7, 0xc4, 0x8f, 0x5f, 0x85, 0x8c, 0xa3, 0x2f, 0x00,
	0x98, 0x94, 0xbc, 0x30, 0x10, 0x19, 0x6c, 0x3c, 0x68, 0x63, 0x5b, 0x69, 0xc6, 0x01, 0x43, 0x0f,
	0xc1, 0x52, 0x82, 0x48, 0x5f, 0xe3, 0x41, 0xab, 0xff, 0xf3, 0x9d, 0x3b, 0xd4, 0x51, 0xb8, 0x40,
	0x39, 0x3f, 0x59, 0x00, 0x83, 0x34, 0x49, 0x94, 0x59, 0xd4, 0x5b, 0x18, 0xe8, 0x50, 0xd5, 0xc3,
	0xa0, 0x1a, 0xee, 0x7a, 0x35, 0xdc, 0xe8, 0x37, 0x60, 0x32, 0xee, 0xf3, 0x9c, 0xc9, 0x0c, 0x75,
	0xf6, 0xdc, 0x23, 0x8c, 0x58, 0x83, 0xd0, 0x57, 0xd0, 0xe6, 0xd4, 0x4f, 0x58, 0x96, 0x52, 0x5e,
	0xe4, 0xae, 0x8d, 0x5b, 0xa5, 0x6e, 0x1c, 0xa0, 0xa7, 0x60, 0x13, 0x9d, 0x40, 0x26, 0xcb, 0xa9,
	0xd5, 0xff, 0x7c, 0xe7, 0xd0, 0x6a, 0x82, 0xf1, 0x16, 0x8d, 0x7e, 0x80, 0xa6, 0xa0, 0x5e, 0x14,
	0x26, 0x44, 0x56, 0x5b, 0xab, 0xef, 0xec, 0x78, 0x6e, 0xff, 0xe2, 0x89, 0xab, 0x91, 0xb8, 0xf4,
	0x41, 0xbf, 0x06, 0x83, 0xa6, 0x11, 0x91, 0xe5, 0xd8, 0xe9, 0x7f, 0xb2, 0xe3, 0x8b, 0xd3, 0x88,
	0x60, 0x09, 0x40, 0xa7, 0x60, 0xe9, 0xcc, 0xc8, 0xfa, 0x6c, 0xf5, 0x3f, 0xdb, 0xc1, 0x6a, 0xa2,
	0xe0, 0x02, 0x86, 0x7e, 0x00, 0xcb, 0xe7, 0x9c, 0x86, 0x0b, 0x26, 0xab, 0xb6, 0xd5, 0xbf, 0xff,
	0xee, 0x97, 0x9d, 0x4b, 0x60, 0xce, 0x09, 0xc3, 0x85, 0x93, 0xc8, 0x77, 0xe4, 0x73, 0x92, 0x2c,
	0x37, 0x5e, 0xc2, 0x64, 0x6d, 0x1b, 0xd8, 0xd6, 0x9a, 0x09, 0x43, 0x8f, 0xb6, 0xf9, 0x6e, 0xc9,
	0xe3, 0xef, 0xec, 0xcd, 0xb7, 0xa0, 0x4e, 0x99, 0x73, 0x74, 0x07, 0xac, 0x65, 0x9a, 0x24, 0x22,
	0x0f, 0x5d, 0x91, 0xd4, 0x97, 0x07, 0xd8, 0x14, 0x8a, 0x71, 0x80, 0x1e, 0x82, 0x21, 0x7e, 0xf5,
	0x7e, 0xb6, 0xf7, 0xb0, 0xed, 0x5b, 0x5f, 0x1e, 0x60, 0x09, 0x44, 0xdf, 0x02, 0xca, 0x19, 0xa1,
	0x5e, 0x46, 0xd3, 0xb7, 0x61, 0x40, 0x02, 0x8f, 0xfb, 0x2b, 0xd6, 0x5b, 0xde, 0x6b, 0x3c, 0xb0,
	0x71, 0x57, 0x58, 0x66, 0xda, 0xe0, 0xfa, 0x2b, 0x76, 0xfc, 0xcf, 0x1a, 0x34, 0x8b, 0xf8, 0x8b,
	0xb7, 0xa7, 0x19, 0x49, 0x3c, 0xce, 0x74, 0x25, 0x1d, 0x9f, 0xa8, 0xc1, 0x72, 0x52, 0x0c, 0x16,
	0x99, 0x2b, 0x39, 0x58, 0xb0, 0x29, 0xa0, 0x2e, 0x43, 0xbf, 0x85, 0x56, 0x9e, 0xad, 0xa8, 0x2f,
	0xaf, 0x62, 0xba, 0x90, 0xde, 0xe7, 0x08, 0x05, 0xdc, 0x65, 0xe8, 0x31, 0x34, 0x97, 0x51, 0xca,
	0x88, 0xf0, 0x6c, 0x7c, 0xd0, 0xd3, 0x92, 0x58, 0x97, 0x1d, 0x4f, 0x00, 0xb6, 0xa9, 0x41, 0xf7,
	0xa0, 0x25, 0xfb, 0x45, 0x16, 0x91, 0xbf, 0x92, 0xa2, 0xad, 0x54, 0x55, 0xe8, 0x4b, 0x00, 0x92,
	0x2c, 0xe9, 0x26, 0xe3, 0xdb, 0xe6, 0x56, 0xd1, 0x3c, 0xef, 0x40, 0x9b, 0x92, 0xc8, 0xdf, 0x90,
	0xc0, 0x13, 0x5d, 0xfa, 0x77, 0x46, 0xb3, 0xdd, 0xed, 0x3a, 0xff, 0x36, 0xc0, 0x54, 0xd9, 0xba,
	0x51, 0x85, 0xa2, 0x21, 0x8a, 0xf7, 0x2d, 0xd3, 0x48, 0x1f, 0x57, 0xca, 0x25, 0x77, 0x1b, 0x1f,
	0xc1, 0x5d, 0xe3, 0x76, 0xdc, 0x7d, 0xa2, 0xc9, 0xa0, 0x8a, 0xf1, 0xeb, 0xbd, 0xcc, 0xaa, 0x70,
	0x02, 0x93, 0x4b, 0x4d, 0x8a, 0x67, 0x37, 0xea, 0xf1, 0xcb, 0xfd, 0xce, 0x7b, 0x6a, 0x71, 0xdb,
	0x58, 0xac, 0xdb, 0x34, 0x96, 0xeb, 0xf5, 0xd1, 0xdd, 0xad, 0x8f, 0x8f, 0xa3, 0x67, 0x08, 0x47,
	0xd7, 0xfe, 0x4e, 0x59, 0x0e, 0xb5, 0xdb, 0x96, 0x43, 0xa5, 0xb4, 0xea, 0xd7, 0x4b, 0xeb, 0x79,
	0x1b, 0x60, 0x59, 0x3a, 0x1c, 0xbf, 0xfd, 0x7f, 0x0b, 0xa1, 0xca, 0xe5, 0xfa, 0xad, 0xb9, 0xec,
	0xfc, 0xcb, 0x84, 0xc6, 0xf0, 0xa5, 0x7b, 0x8d, 0x52, 0xb5, 0x1d, 0x4a, 0xf5, 0xc0, 0x22, 0x89,
	0xbf, 0x88, 0x88, 0xfa, 0x13, 0x4d, 0x5c, 0x88, 0xe2, 0x52, 0xc6, 0x7d, 0xca, 0x6f, 0x59, 0x40,
	0x12, 0xeb, 0x32, 0x74, 0x06, 0x66, 0xe6, 0x53, 0xd1, 0xa4, 0x8c, 0xbd, 0x81, 0x1c, 0xbe, 0x74,
	0x4f, 0x66, 0x12, 0x80, 0x35, 0x10, 0x9d, 0xc0, 0xe1, 0x5f, 0x72, 0x42, 0x37, 0xbd, 0x43, 0x39,
	0xc6, 0x7a, 0x7b, 0x3c, 0x7e, 0x2f, 0xec, 0x58, 0xc1, 0x8e, 0xe7, 0x60, 0xaa, 0x13, 0x50, 0x1b,
	0x6a, 0x57, 0x7a, 0xb5, 0xa9, 0x5d, 0x89, 0xb5, 0xd2, 0x8f, 0xb2, 0xb5, 0xaf, 0xb7, 0x19, 0x25,
	0xa0, 0x5f, 0x42, 0x27, 0x08, 0xd9, 0x9f, 0xc5, 0xf4, 0xf0, 0x32, 0x9f, 0xaf, 0x99, 0xde, 0x67,
	0x8e, 0x0a, 0xed, 0x4c, 0x28, 0x8f, 0x7f, 0x32, 0xe0, 0x50, 0xde, 0x72, 0xa3, 0x22, 0xef, 0x43,
	0x87, 0xfb, 0x74, 0x45, 0xb8, 0x77, 0x7d, 0x3c, 0xb6, 0x95, 0x76, 0xa6, 0x86, 0xa4, 0x03, 0x47,
	0x72, 0x8d, 0xf5, 0x04, 0xbb, 0xbd, 0xb8, 0xb8, 0xa5, 0x25, 0x95, 0x22, 0x4e, 0xaf, 0xe5, 0xd2,
	0xa5, 0x30, 0x8c, 0x93, 0x4c, 0x05, 0xc8, 0xc0, 0x20, 0x55, 0x73, 0xa1, 0x11, 0x4b, 0xa1, 0xbe,
	0x83, 0xc9, 0x60, 0xd8, 0xd8, 0x52, 0x33, 0x98, 0xa1, 0x67, 0xa2, 0xa4, 0xc3, 0xd5, 0x8a, 0xa8,
	0x25, 0xb3, 0xd3, 0xbf, 0xf7, 0xae, 0x30, 0x9d, 0xb8, 0x0a, 0x87, 0x0b, 0x07, 0x74, 0x06, 0x06,
	0xdf, 0x64, 0xc5, 0xcc, 0xfb, 0xe2, 0xdd, 0x8e, 0x9b, 0x8c, 0x60, 0x09, 0x45, 0x4f, 0xc0, 0xa4,
	0x72, 0x67, 0x97, 0xc3, 0xaf, 0xd3, 0xbf, 0xfb, 0x4e, 0x27, 0xb5, 0xda, 0x63, 0x0d, 0x97, 0x53,
	0x8a, 0x24, 0x92, 0x35, 0xf6, 0x87, 0x09, 0x2e, 0xa0, 0x2e, 0x13, 0x1f, 0x11, 0xfa, 0xd1, 0xc8,
	0x82, 0xc6, 0xf9, 0x6c, 0xdc, 0x3d, 0x40, 0x47, 0x60, 0x0f, 0xc7, 0xf3, 0xc1, 0xf4, 0x62, 0x84,
	0xff, 0xd8, 0xad, 0x39, 0xdf, 0x82, 0x21, 0x9e, 0x87, 0x5a, 0x60, 0x0d, 0xa6, 0x13, 0x77, 0x34,
	0x71, 0xbb, 0x07, 0xa8, 0x0d, 0xcd, 0x19, 0x9e, 0x5e, 0x8c, 0x87, 0x23, 0xdc, 0xad, 0x21, 0x1b,
	0x0e, 0x2f, 0xce, 0x5f, 0xbd, 0x19, 0x75, 0xeb, 0xce, 0x33, 0x30, 0xd5, 0xbb, 0x04, 0x7e, 0xfe,
	0x66, 0x30, 0x18, 0xcd, 0xe7, 0xdd, 0x03, 0x81, 0x18, 0x61, 0x3c, 0x15, 0xe0, 0x16, 0x58, 0xee,
	0xf8, 0xf5, 0x68, 0xfa, 0xc6, 0xed, 0xd6, 0x85, 0x30, 0x1b, 0x4d, 0x86, 0xe3, 0xc9, 0x8b, 0x6e,
	0xc3, 0x49, 0x01, 0xe6, 0xf9, 0x82, 0x6d, 0x18, 0x27, 0xb1, 0x1c, 0x42, 0xdb, 0x52, 0x56, 0x5b,
	0xd8, 0xfb, 0xba, 0x03, 0xae, 0xa2, 0xd1, 0x7d, 0x68, 0x04, 0xeb, 0x62, 0x05, 0x44, 0x37, 0x43,
	0x88, 0x85, 0xd9, 0xf9, 0x4f, 0x1d, 0x0e, 0x45, 0xab, 0x93, 0x7d, 0xbb, 0xd8, 0x93, 0x6b, 0x7b,
	0xfb, 0xb6, 0xfe, 0xd4, 0xda, 0xee, 0xcf, 0xa7, 0x60, 0x51, 0xb5, 0x8c, 0xeb, 0x5b, 0x76, 0x3d,
	0xf4, 0xaa, 0x8e, 0x0b, 0x18, 0x7a, 0x0a, 0xc0, 0xca, 0xbf, 0xa7, 0x2b, 0xfb, 0xc6, 0x26, 0x51,
	0x02, 0x70, 0x05, 0xfc, 0x3f, 0x8c, 0x95, 0xa7, 0x00, 0xe2, 0xb3, 0xc1, 0x57, 0x84, 0x38, 0xfc,
	0x20, 0x21, 0x6c, 0x8d, 0x56, 0x4d, 0xaf, 0xec, 0x3f, 0xe6, 0xed, 0xfb, 0xcf, 0x29, 0x7c, 0xca,
	0x12, 0x3f, 0x63, 0xeb, 0x94, 0x7b, 0x41, 0x4e, 0xe5, 0xf7, 0x87, 0x28, 0x47, 0xf5, 0xf9, 0x85,
	0x0a, 0xdb, 0x50, 0x9b, 0x5e, 0xb3, 0x6f, 0x46, 0x62, 0x16, 0xcb, 0x01, 0x03, 0x60, 0x9e, 0x0f,
	0xdc, 0xf1, 0xc5, 0xa8, 0x7b, 0x20, 0x7e, 0x0f, 0x5e, 0x4d, 0xe7, 0xa3, 0xa1, 0xe2, 0xca, 0x74,
	0x36, 0x9a, 0x08, 0x7a, 0x48, 0xae, 0x08, 0x83, 0xe4, 0xca, 0x96, 0x50, 0xc6, 0x37, 0xf7, 0xc1,
	0x10, 0x13, 0x58, 0xf0, 0x76, 0x3c, 0x19, 0xbb, 0xe3, 0x73, 0x77, 0x8a, 0x15, 0x8d, 0xf1, 0x68,
	0x3e, 0x9b, 0x4e, 0x24, 0x47, 0x17, 0xa6, 0x7c, 0xfb, 0xa3, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x5b, 0xcc, 0xe1, 0x60, 0x7c, 0x0f, 0x00, 0x00,
}
